{"version":3,"sources":["./src/app/http-interceptors/cache.interceptor.ts","./src/app/components/projects/projects.component.ts","./src/app/components/projects/projects.component.html","./src/app/http-interceptors/basic-auth.interceptor.ts","./src/app/components/step-opts/step-opts.component.ts","./src/app/components/step-opts/step-opts.component.html","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/graph/graph.component.ts","./src/app/components/graph/graph.component.html","./src/app/services/entity.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/guards/auth.guard.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/services/sysutil.service.ts","./src/app/app.module.ts","./src/app/services/files.service.ts","./src/app/components/open-file/open-file.component.ts","./src/app/components/open-file/open-file.component.html","./src/app/http-interceptors/error.interceptor.ts","./src/app/services/authentication.service.ts","./src/app/components/options/options.component.ts","./src/app/components/options/options.component.html","./src/app/components/commands/commands.component.ts","./src/app/components/commands/commands.component.html","./src/app/classes/entity.ts","./src/app/services/events.service.ts","./src/app/components/step-list/step-list.component.ts","./src/app/components/step-list/step-list.component.html","./src/app/app-routing.module.ts","./src/app/components/step-props/step-props.component.ts","./src/app/components/step-props/step-props.component.html","./src/app/classes/step.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class CacheInterceptor implements HttpInterceptor {\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    const httpRequest = req.clone({\r\n      headers: new HttpHeaders({\r\n        'Cache-Control': 'no-cache',\r\n        'Pragma': 'no-cache',\r\n        'Expires': 'Sat, 01 Jan 2000 00:00:00 GMT'\r\n      })\r\n    });\r\n\r\n    return next.handle(httpRequest);\r\n  }\r\n}","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { EntityService } from 'src/app/services/entity.service';\nimport { EventsService, RefreshProjects } from 'src/app/services/events.service';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.styl']\n})\nexport class ProjectsComponent implements OnInit {\n\n  @Output()\n  onDrawerToggle = new EventEmitter<boolean>();\n    \n  projects: string[] = []\n\n  toggleDrawer() {\n    this.load()\n    this.onDrawerToggle.emit(true);\n  }\n  \n  constructor(private entityService: EntityService, private eventsService: EventsService) {\n    eventsService.eventEvent$.subscribe(ev => {if(ev instanceof RefreshProjects) {this.load()}})\n  }\n\n  private load(){\n    this.entityService.loadList().subscribe(\n      s => {\n        this.projects = s\n        console.log(s)\n      },\n      error => {\n        alert(error.error)\n        console.log(error)\n      }\n    )\n   }\n\n  ngOnInit(): void {\n    this.load()\n  }\n\n  loadProject(name: string) {\n    this.entityService.loadEntity(name)\n    this.toggleDrawer();\n  }\n\n}\n","<mat-nav-list>\n    <mat-list-item *ngFor=\"let project of projects\">\n      <a matLine [routerLink]=\"null\" (click)=\"loadProject(project)\">{{ project }}</a>\n    </mat-list-item>\n</mat-nav-list>","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Injectable()\r\nexport class BasicAuthInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with basic auth credentials if available\r\n        const currentUser = this.authenticationService.currentUserValue;\r\n        if (currentUser && currentUser.authdata) {\r\n            request = request.clone({\r\n                setHeaders: { \r\n                    Authorization: `Basic ${currentUser.authdata}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}\r\n","import { Component, Input, OnInit, OnChanges, Type, SimpleChanges } from '@angular/core';\nimport { FormArray, FormGroup } from '@angular/forms';\nimport { FormBuilder } from '@angular/forms';\nimport { Step } from 'src/app/classes/step';\nimport { EntityService } from 'src/app/services/entity.service';\nimport { EventsService, File, Refresh, Run, UpdateFileList } from 'src/app/services/events.service';\nimport { FilesService } from 'src/app/services/files.service';\n\n@Component({\n  selector: 'app-step-opts',\n  templateUrl: './step-opts.component.html',\n  styleUrls: ['./step-opts.component.styl']\n})\nexport class StepOptsComponent implements OnInit, OnChanges {\n  private step_: Step | undefined;\n  private myType: any;\n  optsTypes!: any;\n  files: string[] = [\"file.sql\"]\n\n  @Input()\n  set step(step: Step | undefined) {\n    this.step_ = step\n    this.setOptsName()\n    this.eventsService.emitEventEvent(new UpdateFileList())\n  }\n\n  get step(): Step | undefined {\n    return this.step_;\n  }\n\n  private setOptsName() {\n    this.entityService.getOptType().subscribe(optsTypes => {\n      this.entityService.options = optsTypes\n      this.optsTypes = optsTypes\n      this.myType = optsTypes.find((ot: any) => ot.name === this.step?.opt?.name)\n      this.optsControl = this.fb.group({\n        opt: this.fb.array(\n          this.usedOpts().map((s: any) => {\n            let option = Object.keys(s)[0]\n            let value: any = this.step?.opt?.opts?.find(o => o.option === option)?.value\n  \n            if(Object.values(s)[0] === \"string\") {\n              return this.fb.control(value)\n            }\n            if(Object.values(s)[0] === \"number\") {\n              return this.fb.control(value)\n            }\n            return this.fb.control(value)\n          })\n        )\n      })\n  \n      this.optsControl.valueChanges.subscribe(s => {\n        let labels: string[] = this.labels\n        let value: any[] = []\n        s.opt.forEach((o: any, idx: number) => {\n          let res: any = {}\n          res[\"option\"] = labels[idx]\n          res[\"value\"] = o\n          value.push(res)\n        });\n        if(this.step && this.step.opt) {\n          this.step.opt.opts = value\n        } else {\n          if(this.step) {\n            this.step.opt = {name: \"SparkSQL\", opts: value}\n          }\n        }\n  \n      })\n    })\n\n  }\n\n  optsControl: FormGroup | undefined;\n\n  private getType(option: any): string {\n    if(Array.isArray(Object.values(option)[0])) {\n      return \"array\"\n    }\n    if(typeof Object.values(option)[0] === \"object\") {\n      return \"object\"\n    }\n    return \"\" + Object.values(option)[0]\n  }\n\n  private usedOpts() {\n    if(this.myType) {\n      if(this.myType.opts) {\n        return this.myType.opts.filter((o: any) => [\"string\", \"boolean\", \"number\"].includes(this.getType(o)))\n      }\n    }\n    return []\n  }\n\n constructor(private fb: FormBuilder, private entityService: EntityService, \n  private eventsService: EventsService, private fileService: FilesService) {\n    this.eventsService.eventEvent$.subscribe(ev => {\n      if(ev instanceof Refresh){ this.step = undefined}\n      if(ev instanceof UpdateFileList){ \n        this.fileService.getListFiles().subscribe(ev => this.files = ev, \n          error => {\n            console.error(error)\n            alert(error.error)\n          }) \n        }\n    })\n  }\n\n  get opt(): FormArray {\n    return this.optsControl?.get('opt') as FormArray;\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    \n  }\n\n  modelChangeFn(l: any){\n    this.setOptsName()\n  }\n  get labels(): string[] {\n    return this.usedOpts().flatMap((o: any) => Object.keys(o))\n  }\n  get types(): string[] {\n    return this.usedOpts().flatMap((o: any) => this.getType(o))\n  }\n\n  openFile(file: string) {\n    this.eventsService.emitEventEvent(new File(file))\n  }\n\n  deleteFile(file: string) {\n    if(confirm(\"Are you sure delete file \" + file + \"?\")) {\n      this.fileService.delete(file).subscribe(s => alert(s), error => {console.error(error); alert(error.error)})\n      this.opt.controls.forEach(c => {\n        if(c.value === file) {\n          c.setValue(\"\")\n        }\n      })\n      this.eventsService.emitEventEvent(new UpdateFileList())\n    }\n  }\n\n  run() {\n    let s =\"sparkApp=\" + this.entityService.getEntity().name + \" stepTo=\" + this.step_?.name\n    this.eventsService.emitEventEvent(new Run(s))\n  }\n\n  printShema() {\n    let s = \"sparkApp=\" + this.entityService.getEntity().name + \"stepTo=\" + this.step_?.name + \" printSchema=true\"\n    this.eventsService.emitEventEvent(new Run(s))\n  }\n\n}\n","<form>\n    <datalist id=\"datalist\">\n        <option *ngFor=\"let file of files\" value=\"{{file}}\">\n    </datalist>\n    <h2>Options</h2>\n    <ng-container *ngIf=\"step\">\n        <div fxLayot=\"row\" fxLayoutGap=\"5px\" style=\"margin-bottom: 5px;\">\n            <div fxFlex=\"20\">\n                <label for=\"selectType\">Type</label>\n            </div>\n            <div fxFlex>\n                <select name=\"selectType\" [(ngModel)]=\"step.opt.name\" (ngModelChange)=\"modelChangeFn($event)\">\n                    <option *ngFor=\"let o of optsTypes\" [ngValue]=\"o.name\">{{o.name}}</option>\n                </select>\n                <button mat-icon-button class=\"example-icon\" (click)=\"run()\">\n                    <mat-icon>play_arrow</mat-icon>\n                </button>\n                <button mat-icon-button class=\"example-icon\" (click)=\"printSchema()\">\n                    <mat-icon>play_arrow</mat-icon>\n                </button>\n            </div>\n        </div>\n    </ng-container>\n    <ng-container *ngIf=\"optsControl\">\n    <div [formGroup]=\"optsControl\">\n        <div formArrayName=\"opt\">  \n            <div *ngFor=\"let o of opt.controls; let i=index\" fxLayot=\"row\" fxLayoutGap=\"5px\" style=\"margin-bottom: 5px;\">\n                <div fxFlex=\"20\">\n                    <label for=\"o-{{i}}\">{{labels[i]}}</label>\n                </div>\n                <div fxFlex>\n                    <ng-container [ngSwitch]=\"types[i]\">\n                        <ng-container *ngSwitchCase=\"'string'\">\n                            <input list=\"datalist\" type=\"text\" id=\"o-{{i}}\" [formControlName]=\"i\" style=\"width: 80%;\">\n                            <ng-container *ngIf=\"labels[i].includes('file')\">\n                                <button mat-icon-button class=\"example-icon\" (click)=\"openFile(o.value)\">\n                                    <mat-icon>file_open</mat-icon>\n                                </button>\n                                <button mat-icon-button class=\"example-icon\" (click)=\"deleteFile(o.value)\">\n                                    <mat-icon>delete</mat-icon>\n                                </button>\n                            </ng-container>\n                        </ng-container>\n                        <input *ngSwitchCase=\"'boolean'\" type=\"checkbox\" id=\"o-{{i}}\" [formControlName]=\"i\">\n                        <input *ngSwitchCase=\"'number'\"  type=\"number\" id=\"o-{{i}}\" [formControlName]=\"i\">\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n    </div>\n    </ng-container>\n</form>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient } from '@angular/common/http';\nimport { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { EntityService } from 'src/app/services/entity.service';\nimport { CenterGraph, EventsService, File, FileChanged, FileSaved, FitGraph, GraphSize, MainSave, Refresh, RefreshProjects } from 'src/app/services/events.service';\nimport 'brace'\nimport 'brace/mode/json'\nimport 'brace/theme/eclipse'\nimport * as ace from \"ace-builds\";\nimport { Entity } from 'src/app/classes/entity';\nimport { MatTabChangeEvent } from '@angular/material/tabs';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit, AfterViewInit {\n  filebody: any = \"\"\n  openFiles: string[] = []\n  filesChanged: string[] = []\n  selectedTabIndex = 0;\n  \n  selectedIndexChange(event: number) {\n    if(event == 2) {\n      this.filebody = this.entityService.getAsJson()\n    }\n  }\n\n  a(event: MatTabChangeEvent) {\n    console.log(\"MatTabChangeEvent\")\n    console.log(event)\n  }\n\n  @ViewChild(\"editor\") private editor!: ElementRef<HTMLElement>;\n   \n  openDrawer() {\n    this.eventService.emitEventEvent(new RefreshProjects())\n  }\n\n  entity!: Entity\n\n  constructor(private http: HttpClient, private eventService: EventsService, public entityService: EntityService) { \n    this.entity = this.entityService.getEntity()\n    this.eventService.eventEvent$.subscribe(ev => {\n      if(ev instanceof Refresh) {\n        this.entity = entityService.getEntity()\n        this.filebody = this.entityService.getAsJson()\n      }\n      if(ev instanceof File) {\n        if(!this.openFiles.includes(ev.name)) {\n          this.openFiles.push(ev.name)\n        }\n        setTimeout(() => this.selectedTabIndex = 4 + this.openFiles.indexOf(ev.name), 100)\n        \n      }\n      if(ev instanceof FileChanged) {\n        if(this.filesChanged.indexOf(ev.name) == -1) {\n          this.filesChanged.push(ev.name)\n        }\n      }\n      if(ev instanceof FileSaved) {\n        if(this.filesChanged.indexOf(ev.name) > -1) {\n          this.filesChanged.splice(this.filesChanged.indexOf(ev.name), 1)\n        }\n      }\n    })\n  }\n\n  centerGraph() {\n    this.eventService.emitEventEvent(new CenterGraph())\n  }\n\n  fitGraph() {\n    this.eventService.emitEventEvent(new FitGraph())\n  }\n\n  @ViewChild('graphContainer') graphContainer: ElementRef | undefined;\n  w: number = screen.width * 0.75;\n  h: number = screen.height * 0.355;\n\n  hello: string = \"\"\n  panelOpenState = false;\n  ngOnInit(): void {\n    let opt: Object = {\n        responseType: 'text' as 'json'\n    }\n    this.http.get<string>('/hello', opt).subscribe(s => {\n      this.hello = s\n      console.log(s)\n    },\n    error => {\n      console.log(error)\n    })\n  }\n\n  ngAfterViewInit() {\n    if(this.graphContainer) {\n      this.w = this.graphContainer.nativeElement.offsetWidth;\n      this.h = this.graphContainer.nativeElement.offsetHeight;\n      this.eventService.emitEventEvent(new GraphSize(this.h, this.w))\n    }\n    //const aceEditor = ace.edit(this.editor.nativeElement);\n    //aceEditor.setTheme('ace/theme/twilight');\n    //aceEditor.session.setMode('ace/mode/html');\n  }\n\n  save() {\n    this.entityService.save().subscribe(\n      s => {\n        this.eventService.emitEventEvent(new MainSave())\n        alert(\"Saved!\")\n      },\n      error => {\n        alert(error.error)\n        console.log(error)\n      })\n  }\n\n  createNew() {\n    let answer = prompt(\"New project name\")\n    if(answer != null) {\n      this.entityService.createNew(answer)\n    }\n  }\n\n  copy() {\n    let answer = prompt(\"Save copy as\")\n    if(answer != null) {\n      this.entityService.copy(this.entity.name, answer)\n    }\n  }\n\n  delete() {\n    if(confirm(\"Are your sure? Project will be deleted.\")) {\n      this.entityService.delete(this.entity.name)\n    }\n  }\n\n  closeFile(fileName: string) {\n    this.openFiles.splice(this.openFiles.indexOf(this.openFiles.filter(f=>f===fileName)[0]), 1) \n    if(this.filesChanged.indexOf(fileName) > -1) {\n      this.filesChanged.splice(this.filesChanged.indexOf(fileName), 1)\n    }\n    this.selectedTabIndex = 0  \n  }\n\n  fileIsChanged(file: string) {\n    return this.filesChanged.indexOf(file) != -1\n  }\n}\n","<mat-drawer-container>\n<mat-drawer #drawer mode=\"over\" (openedStart)=\"openDrawer()\">\n    <app-projects (onDrawerToggle)=\"drawer.toggle()\"></app-projects>\n  </mat-drawer>\n  <mat-drawer-content>\n    <mat-toolbar>\n      <button mat-icon-button class=\"example-icon\" (click)=\"drawer.toggle()\" matTooltip=\"Open project\">\n        <mat-icon>folder_open</mat-icon>\n      </button>\n      <button mat-icon-button class=\"example-icon\" (click)=\"createNew()\" matTooltip=\"Create new empty project\">\n        <mat-icon>create_new_folder</mat-icon>\n      </button>\n      <button mat-icon-button class=\"example-icon\" matTooltip=\"Copy project\" (click)=\"copy()\">\n        <mat-icon>folder_copy</mat-icon>\n      </button>\n      <button mat-icon-button class=\"example-icon\" (click)=\"save()\" matTooltip=\"Save\">\n        <mat-icon>save</mat-icon>\n      </button>\n      <button mat-icon-button class=\"example-icon\" (click)=\"delete()\" matTooltip=\"Delete poject\">\n        <mat-icon>delete</mat-icon>\n      </button>\n      <input id=\"idname\" [(ngModel)]=\"entity.name\" readonly>\n      <span>&nbsp;</span>\n      <span>Data Quarry</span>\n      \n      <span class=\"example-spacer\"></span>\n      <button mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\n        <mat-icon>favorite</mat-icon>\n      </button>\n      <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with share icon\">\n        <mat-icon>share</mat-icon>\n      </button>\n    </mat-toolbar>\n\n    <div fxLayout=\"row\" fxLayoutGap=\"5px\">\n      <div fxFlex=\"25\" style=\"overflow: auto;height: 91vh;\">\n        <app-step-list></app-step-list>\n      </div>\n      <div fxFlex>\n        <mat-tab-group (selectedIndexChange)=\"selectedIndexChange($event)\" (selectedTabChange)=\"a($event)\" [(selectedIndex)]=\"selectedTabIndex\">\n          <mat-tab label=\"Graph\">\n            <ng-template mat-tab-label>\n              <mat-icon (click)=\"centerGraph()\">center_focus_strong</mat-icon>\n              <mat-icon (click)=\"fitGraph()\">fit_screen</mat-icon>\n              Graph\n            </ng-template>\n            <div style=\"overflow: auto;height: 84vh;\">  \n              <div fxLayout=\"column\" style=\"width: 100%; height: 100%;\" fxLayoutGap=\"5px\">\n                <div fxFlex #graphContainer>\n                  <app-graph></app-graph>\n                </div>\n                <div fxFlex=\"40vh\" style=\"background-color: #f5f5f5;\">\n                  <app-step-props></app-step-props>\n                </div>\n              </div>\n            </div>\n          </mat-tab>\n          <mat-tab label=\"Options\">\n            <div style=\"overflow: auto;height: 84vh;\">\n              <app-options [entity]=\"entity\"></app-options>\n            </div>\n          </mat-tab>\n          <mat-tab label=\"As json (readoly)\">\n            <div style=\"overflow: auto;height: 84vh;\">\n              <div ace-editor #editor [(text)]=\"filebody\" [mode]=\"'json'\" [theme]=\"'eclipse'\" [readOnly]=\"true\" style=\"height:100%;\"></div>\n            </div>\n          </mat-tab>\n          <mat-tab label=\"sh console\">\n            <app-commands></app-commands>\n          </mat-tab>\n          <ng-template [ngIf]=\"openFiles.length > 0\">\n          <mat-tab *ngFor=\"let file of openFiles\" [label]=\"file\" class=\"noprint\">\n            <ng-template mat-tab-label>\n              <mat-icon (click)=\"closeFile(file)\">close</mat-icon>\n              <mat-icon *ngIf=\"fileIsChanged(file)\">circle</mat-icon>\n              {{file}}\n            </ng-template>\n            <app-open-file [file]=\"file\"></app-open-file>\n          </mat-tab>\n          </ng-template>\n        </mat-tab-group>\n      </div>\n    </div>\n  </mat-drawer-content>\n</mat-drawer-container>","import { Component, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Node } from '@swimlane/ngx-graph';\nimport { EntityService } from 'src/app/services/entity.service';\nimport { Entity } from 'src/app/classes/entity';\nimport { CenterGraph, EventsService, FitGraph, GraphSize, RedrawGraph, Refresh, StepSelect } from 'src/app/services/events.service';\nimport { Step } from 'src/app/classes/step';\n\n@Component({\n  selector: 'app-graph',\n  templateUrl: './graph.component.html',\n  styleUrls: ['./graph.component.styl']\n})\nexport class GraphComponent implements OnInit, OnChanges {\n  x: number = 140;\n  y: number = 100;\n  zoomToFit$: Subject<boolean> = new Subject();\n  panToNode$: Subject<any> = new Subject();\n  center$: Subject<boolean> = new Subject();\n  clusters: any[] = []\n  nodes: any[] = []\n  links: any[] = []\n  showMiniMap: boolean = false;\n  showClusters: boolean = true;\n\n  selected: Step | undefined;\n  entity: Entity | undefined;\n\n  checkIfSelected(node: Node) {\n    return node.data.step == this.selected\n  }\n\n  fit() {\n    this.zoomToFit$.next(true)\n  }\n\n  center() {\n    this.center$.next(true)\n  }\n\n  constructor(private entityService: EntityService, private eventService: EventsService) { \n    this.fillGraphData()\n    this.eventService.eventEvent$.subscribe(ev => {if(ev instanceof StepSelect) {this.selected = ev.step}})\n    this.eventService.eventEvent$.subscribe(ev => {if(ev instanceof RedrawGraph) {this.fillGraphData()}})\n    this.eventService.eventEvent$.subscribe(ev => {\n      if(ev instanceof GraphSize) {\n        setTimeout(() => {\n          this.y = ev.h - 7;\n          this.x = ev.w;\n        }, 100)\n      }\n      if(ev instanceof CenterGraph) { this.center() }\n      if(ev instanceof FitGraph) { this.fit() }\n    })\n    this.eventService.eventEvent$.subscribe(ev => {if(ev instanceof Refresh) {this.fillGraphData()}})\n  }\n\n  fillGraphData() {\n    this.entity = this.entityService.getEntity()\n    if(this.selected && !this.entity.steps.includes(this.selected)){\n      this.selected = undefined\n    }\n    this.nodes = this.entity?.steps.map(step => {\n      return {\n        id: step.name, \n        label: step.name, \n        data: {image: this.entityService.getStepImage(step.opt.name), step: step}\n      }\n    }) || []\n    let i = 0\n    this.links = this.entity?.steps.filter(s => s.in.length > 0).flatMap(s => s.in.map(in_ => {return {id: i++, source: in_.name, target: s.name} })) || []\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.fillGraphData()\n  }\n\n  ngOnInit(): void {\n   \n  }\n\n  nodeClick(node: Node) {\n    this.selected = node.data.step\n    this.eventService.emitEventEvent(new StepSelect(node.data.step))\n  }\n\n}\n","<ngx-graph\n  [view]=\"[x, y]\"\n  layout=\"dagreCluster\"\n  [links]=\"links\"\n  [nodes]=\"nodes\"\n  [clusters]=\"this.showClusters ? clusters : []\"\n  [showMiniMap]=\"showMiniMap\"\n  [zoomToFit$]=\"zoomToFit$\"\n  [panToNode$]=\"panToNode$\"\n  [center$]=\"center$\"  \n  >\n<ng-template #nodeTemplate let-node>\n    <svg:g class=\"node-group ng-star-inserted\">\n        <image [attr.href]=\"node.data.image\" height=\"40\" width=\"40\" fill=\"none\" (click)=\"nodeClick(node)\" fill=\"#a95963\"/>\n        <ng-container *ngIf=\"checkIfSelected(node)\">\n          <rect height=\"40\" width=\"40\" fill=\"none\" style=\"stroke:gray; stroke-width:3;\"/>\n        </ng-container>\n        <text class=\"name\">{{ node.data.step.name }}</text>\n    </svg:g>\n</ng-template>\n\n<ng-template #clusterTemplate let-cluster>\n  <svg:g class=\"node cluster\">\n    <image [attr.href]=\"cluster.data.image\" height=\"100\" width=\"100\" fill=\"none\"/>\n    <svg:rect\n      rx=\"5\"\n      ry=\"5\"\n      [attr.width]=\"cluster.dimension.width\"\n      [attr.height]=\"cluster.dimension.height\"\n      [attr.fill]=\"cluster.data.color\"\n    />\n  </svg:g>\n</ng-template>\n\n</ngx-graph>\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of } from 'rxjs';\r\nimport { Entity } from '../classes/entity';\r\nimport { Step } from '../classes/step';\r\nimport { EventsService, Refresh } from './events.service';\r\n \r\n@Injectable({ providedIn: 'root' })\r\nexport class EntityService {\r\n    private entity = new Entity()\r\n    constructor(private http: HttpClient, private eventsService: EventsService) {\r\n       \r\n    }\r\n\r\n    getStepUniqName(): string  {\r\n      let i = 1\r\n      while(this.entity.steps.find(s => s.name === \"Step\" + i)) {\r\n        i++\r\n      }\r\n      return \"Step\" + i\r\n    }\r\n\r\n    getEntity(): Entity {\r\n        return this.entity;\r\n    }\r\n\r\n    getAsJson(): string {\r\n      let tosave: any = {name: this.entity.name}\r\n      tosave.steps = this.entity.steps.map(s => {\r\n        return {\r\n          name: s.name,\r\n          in: s.in.map(i => i.name),\r\n          opt: {\r\n            name: s.opt.name,\r\n            opts: s.opt.opts?.map(o => {return {option: o.option, value: o.value}})\r\n          }\r\n        }\r\n      })\r\n      tosave.options = this.entity.options\r\n      let value = JSON.stringify(tosave,undefined,\"  \")\r\n      console.log(value)\r\n      return value\r\n    }\r\n\r\n    save() {\r\n      let opt: Object = {\r\n        responseType: 'text' as 'json'\r\n      }\r\n      let value = this.getAsJson()\r\n      return this.http.post<string>(\"/save\", value, opt)\r\n    }\r\n\r\n    loadEntity(name: string) {\r\n      this.http.get<string>(\"getEntity?project=\" + name).subscribe(entity => {\r\n        this.load(entity)\r\n        this.eventsService.emitEventEvent(new Refresh)\r\n      }, error => {\r\n        alert(error.error)\r\n        console.log(error)\r\n      })\r\n    }\r\n\r\n    private load(value: any) {\r\n      let entity = new Entity()\r\n      entity.name = value.name\r\n      value.steps?.forEach((s: any) => {\r\n        let step = new Step(s.name)\r\n        step.opt.name = s.opt.name\r\n        step.opt.opts = s.opt.opts?.map((o: any) => {\r\n          return {option: o.option, value: o.value}\r\n        })\r\n        entity.steps.push(step)\r\n      })\r\n      value.steps?.forEach((s: any) => { \r\n        let parent: Step | undefined = entity.steps.find(p => p.name == s.name)\r\n        s.in.forEach((ss: string) => {\r\n          let sss: Step | undefined = entity.steps.find(p => p.name === ss)\r\n          if(sss) {\r\n            parent?.in.push(sss)\r\n          }\r\n        })\r\n      });\r\n      entity.options = value.options || []\r\n      this.entity = entity\r\n    }\r\n\r\n    loadList() {\r\n      return this.http.get<string[]>(\"projects\")\r\n    }\r\n    \r\n    options: any;\r\n\r\n    getStepImage(type: string): string {\r\n      if(type === \"CsvSource\") {\r\n        return \"assets/csv.png\"\r\n      }\r\n      if(type === \"ParquetTarget\") {\r\n        return \"assets/icon--parquet.png\"\r\n      }\r\n      \r\n      return \"assets/sql.png\"\r\n    }\r\n\r\n    getOptType() {\r\n      if(this.options !== undefined) {\r\n        return of(this.options)\r\n      } else {\r\n        return this.http.get<string>(\"/options\")\r\n      }\r\n    }\r\n\r\n    createNew(name: string) {\r\n      this.entity = new Entity()\r\n      this.entity.name = name\r\n      this.save().subscribe(s => {\r\n        this.loadEntity(name)\r\n        alert(\"Created!\")\r\n      }, error => {\r\n        alert(\"Error \" + error.error)\r\n        console.error(error)\r\n      })\r\n    }\r\n\r\n    copy(source: string, target: string) {\r\n      let opt: Object = {\r\n        responseType: 'text' as 'json'\r\n      }\r\n      this.http.post<string>(\"/copyProject?source=\" + source + \"&\" + \"target=\" + target, null, opt).subscribe(s => {\r\n        this.loadEntity(target)\r\n        alert(s)\r\n      }, error => {\r\n        alert(\"Error \" + error.error)\r\n        console.error(error)\r\n      })\r\n    }\r\n\r\n    private loadNew() {\r\n      this.entity = new Entity()\r\n    }\r\n\r\n    delete(name: string) {\r\n      let opt: Object = {\r\n        responseType: 'text' as 'json'\r\n      }\r\n      this.http.post<string>(\"./deleteProject?name=\" + name, null, opt).subscribe(s => {\r\n        this.loadNew()\r\n        this.eventsService.emitEventEvent(new Refresh())\r\n      }, error => {\r\n        console.error(error)\r\n        alert(error.error)\r\n      })\r\n      \r\n    }\r\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.styl']\n})\nexport class AppComponent {\n  title = 'dataqui';\n}\n","<!-- <h1>Angular Router App</h1>\n<nav>\n  <ul>\n    <li><a routerLink=\"/first-component\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">First Component</a></li>\n    <li><a routerLink=\"/second-component\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">Second Component</a></li>\n    <li><a routerLink=\"\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">Home</a></li>\n  </ul>\n</nav>\n-->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content above * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * End of Placeholder * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n\n<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const currentUser = this.authenticationService.currentUserValue;\r\n        if (currentUser) {\r\n            // logged in so return true\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n        return false;\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\n\r\n@Component({ templateUrl: 'login.component.html' })\r\nexport class LoginComponent implements OnInit {\r\n    //loginForm: FormGroup;\r\n    //\r\n    loginForm = this.formBuilder.group({\r\n            username: ['', Validators.required],\r\n            password: ['', Validators.required]\r\n        });\r\n    loading = false;\r\n    submitted = false;\r\n    returnUrl: string = '';\r\n    error = '';\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService\r\n    ) { \r\n        // redirect to home if already logged in\r\n        if (this.authenticationService.currentUserValue) { \r\n            this.router.navigate(['/']);\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.loginForm = this.formBuilder.group({\r\n            username: ['', Validators.required],\r\n            password: ['', Validators.required]\r\n        });\r\n\r\n        // get return url from route parameters or default to '/'\r\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.loginForm.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\r\n        // stop here if form is invalid\r\n        if (this.loginForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        this.authenticationService.login(this.f.username.value, this.f.password.value)\r\n            .pipe(first())\r\n            .subscribe(\r\n                data => {\r\n                    this.router.navigate([this.returnUrl]);\r\n                },\r\n                error => {\r\n                    this.error = error;\r\n                    this.loading = false;\r\n                });\r\n    }\r\n}","<div class=\"col-md-6 offset-md-3 mt-5\">\r\n    <div class=\"alert alert-info\">\r\n        Username: test<br />\r\n        Password: test\r\n    </div>\r\n    <div class=\"card\">\r\n        <h4 class=\"card-header\">Angular 8 Basic Auth Login Example</h4>\r\n        <div class=\"card-body\">\r\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"username\">Username</label>\r\n                    <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\r\n                    <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"password\">Password</label>\r\n                    <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n                    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                    </div>\r\n                </div>\r\n                <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                    Login\r\n                </button>\r\n                <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport class Command {\n  name!: string;\n  template!: string;\n}\n\nexport class RunOperator {\n  shCommand!: string;\n  runid!: string;\n  log: string | undefined;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SysutilService {\n  \n  commands: RunOperator[] = [];\n\n  constructor(private http: HttpClient) { }\n\n  runShCommand(shCommand: string): Observable<string | undefined> {\n    let params = new HttpParams().set(\"sh\",  shCommand)\n    params.append(\"sh\",  shCommand)\n\n    return this.http.get(\"/runit\", { responseType: 'text', params })\n    .pipe(map((runid)=>{\n      let c = new RunOperator()\n      c.shCommand=shCommand;\n      c.runid=runid.toString();\n      this.commands.push(c);\n      return runid.toString();\n    }))\n  }\n\n  refreshLog(command: RunOperator): Observable<any> {\n    let params = new HttpParams().set(\"runid\",  command.runid)\n    params.append(\"runid\",  command.runid)    \n    return this.http.get(\"/sysout\", { responseType: 'text', params })\n  }\n\n  getConfigCommands(): Observable<Command[]> {    \n    return this.http.get<Command[]>(\"/commandFile\")\n  }\n\n  saveConfigCommands(data: any): Observable<any> {\n    return this.http.post<any>(\"/commandFile\", data)    \n  }\n\n}\n","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\n\nimport { CacheInterceptor } from 'src/app/http-interceptors/cache.interceptor';\nimport { BasicAuthInterceptor } from 'src/app/http-interceptors/basic-auth.interceptor';\nimport { ErrorInterceptor } from 'src/app/http-interceptors/error.interceptor';\nimport { HomeComponent } from 'src/app/components/home/home.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatListModule} from '@angular/material/list';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport { NgxGraphModule } from '@swimlane/ngx-graph';\nimport { AceEditorModule } from 'ng2-ace-editor';\nimport 'material-icons/iconfont/material-icons.css';\n\nimport { StepListComponent } from './components/step-list/step-list.component';\nimport { StepPropsComponent } from './components/step-props/step-props.component';\nimport { GraphComponent } from './components/graph/graph.component';\nimport { StepOptsComponent } from './components/step-opts/step-opts.component';\nimport { ProjectsComponent } from './components/projects/projects.component';\nimport { OpenFileComponent } from './components/open-file/open-file.component';\nimport { OptionsComponent } from './components/options/options.component';\nimport { CommandsComponent } from './components/commands/commands.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    StepListComponent,\n    StepPropsComponent,\n    GraphComponent,\n    StepOptsComponent,\n    ProjectsComponent,\n    OpenFileComponent,\n    OptionsComponent,\n    CommandsComponent\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA,\n    NO_ERRORS_SCHEMA\n  ],  \n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    ReactiveFormsModule,\n    CommonModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatGridListModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule,\n    MatButtonModule,\n    MatTabsModule,\n    MatCardModule,\n    MatExpansionModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatTooltipModule,\n    MatAutocompleteModule,\n    FlexLayoutModule,\n    FormsModule,\n    NgxGraphModule,\n    AceEditorModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: CacheInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: BasicAuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { EntityService } from './entity.service';\r\nimport { EventsService, Refresh } from './events.service';\r\n \r\n@Injectable({ providedIn: 'root' })\r\nexport class FilesService {\r\n    \r\n    constructor(private http: HttpClient, private eventsService: EventsService, private entityService: EntityService) {\r\n    \r\n    }\r\n\r\n    getFile(file: string) {\r\n      let opt: Object = {\r\n        responseType: 'text' as 'json'\r\n      }\r\n      return this.http.get<string>(\"./getFile?project=\" + this.entityService.getEntity().name + \"&file=\" + file, opt)\r\n    }\r\n\r\n    getListFiles() {\r\n      return this.http.get<string[]>(\"./getListFiles?project=\" + this.entityService.getEntity().name)\r\n    }\r\n\r\n    save(file: string, content: string) {\r\n      let opt: Object = {\r\n        responseType: 'text' as 'json'\r\n      }\r\n      return this.http.post<string>(\"./saveFile?project=\" + this.entityService.getEntity().name + \"&file=\" + file, content, opt)\r\n    }\r\n\r\n    delete(file: string) {\r\n      let opt: Object = {\r\n        responseType: 'text' as 'json'\r\n      }\r\n      return this.http.post<string>(\"./deleteFile?project=\" + this.entityService.getEntity().name + \"&file=\" + file, null, opt)\r\n    }\r\n}","import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { FilesService } from 'src/app/services/files.service';\nimport 'brace'\nimport 'brace/mode/sql'\nimport 'brace/theme/eclipse'\nimport * as ace from \"ace-builds\";\nimport { EventsService, FileChanged, FileSaved, MainSave } from 'src/app/services/events.service';\n\n@Component({\n  selector: 'app-open-file',\n  templateUrl: './open-file.component.html',\n  styleUrls: ['./open-file.component.styl']\n})\nexport class OpenFileComponent implements OnInit {\n\n  @ViewChild(\"editor\") private editor!: ElementRef<HTMLElement>;\n\n  @Input()\n  file!: string;\n  events: string[] = []\n  aceEditor!: ace.Ace.Editor;\n\n  constructor(private fileService: FilesService, private eventsService: EventsService) {\n    this.eventsService.eventEvent$.subscribe(ev => {\n      if(ev instanceof MainSave) {\n        this.save()\n      }\n    })\n  }\n\n  content: any = \"\";\n  savedContent: any = \"\";\n  \n  ngOnInit(): void {\n    this.fileService.getFile(this.file).subscribe(ev => {\n      this.aceEditor = ace.edit(this.editor.nativeElement);\n      this.content = ev\n      this.savedContent = ev\n      setTimeout(() => this.aceEditor.focus(), 100)\n    }, error => {\n      console.error(error);\n      alert(error.error)\n    })\n  }\n\n  save() {\n    if(this.content == this.savedContent) {\n      return;\n    }\n    this.fileService.save(this.file, this.content).subscribe(s => {\n      this.eventsService.emitEventEvent(new FileSaved(this.file))\n      this.savedContent = this.content\n      this.events = []\n      this.events.push(\"edit\")\n    }, error => {\n      console.error(error);\n      alert(error.error)\n    })\n  }\n\n  onChange(event: any) {\n    this.events.push(\"edit\")\n    if(this.events.length > 1) {\n      this.eventsService.emitEventEvent(new FileChanged(this.file))\n    }\n    if(this.content == this.savedContent) {\n      this.events = []\n      this.events.push(\"save\")\n      this.eventsService.emitEventEvent(new FileSaved(this.file))\n    }\n  }\n\n}","<mat-toolbar>\n    <button mat-icon-button class=\"example-icon\" (click)=\"save()\" matTooltip=\"Save\">\n      <mat-icon>save</mat-icon>\n    </button>\n</mat-toolbar>\n<div style=\"overflow: auto;height: 75vh;\">\n    <div ace-editor \n      #editor [(text)]=\"content\" \n      [mode]=\"'sql'\" \n      [theme]=\"'eclipse'\" \n      style=\"height:100%;\" \n      (textChanged)=\"onChange($event)\"\n      [autoUpdateContent]=\"true\"\n      [durationBeforeCallback]=\"300\"></div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.authenticationService.logout();\r\n                location.reload();\r\n            }\r\n\r\n            const error = err //.error.message || err.statusText;\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { User } from '../classes/user';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n    private currentUserSubject: BehaviorSubject<User|undefined>;\r\n    public currentUser: Observable<User|undefined>;\r\n\r\n    constructor(private http: HttpClient) {\r\n        let u = localStorage.getItem('currentUser')\r\n        if(u == null) {\r\n            this.currentUserSubject = new BehaviorSubject<User|undefined>(undefined);\r\n        } else {\r\n            this.currentUserSubject = new BehaviorSubject<User|undefined>(JSON.parse(u));\r\n        }\r\n        this.currentUser = this.currentUserSubject.asObservable();\r\n    }\r\n\r\n    public get currentUserValue(): User | undefined {\r\n        return this.currentUserSubject.value;\r\n    }\r\n\r\n    login(username: string, password: string) {\r\n        return this.http.post<any>(`/user`, { username, password })\r\n            .pipe(map(user => {\r\n                // store user details and basic auth credentials in local storage to keep user logged in between page refreshes\r\n                user.authdata = window.btoa(username + ':' + password);\r\n                localStorage.setItem('currentUser', JSON.stringify(user));\r\n                this.currentUserSubject.next(user);\r\n                return user;\r\n            }));\r\n    }\r\n\r\n    logout() {\r\n        // remove user from local storage to log user out\r\n        localStorage.removeItem('currentUser');\r\n        this.currentUserSubject.next(undefined);\r\n    }\r\n}","import { Component, Input, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\nimport { Entity, Option } from 'src/app/classes/entity';\nimport { EntityService } from 'src/app/services/entity.service';\nimport { EventsService, Refresh } from 'src/app/services/events.service';\n\n@Component({\n  selector: 'app-options',\n  templateUrl: './options.component.html',\n  styleUrls: ['./options.component.styl']\n})\nexport class OptionsComponent implements OnInit {\n  private entity_!: Entity;\n  @Input()\n  set entity(entity: Entity) {\n    this.entity_ = entity\n    this.setOpts()\n  }\n  get entity(): Entity { return this.entity_ }\n\n  optionsArray = new FormArray([])\n\n  private setOpts() {\n    this.optionsArray = this.fb.array(this.entity_.options.map(o => this.fb.group({\n      name: this.fb.control(o.name),\n      value: this.fb.control(o.value)\n    })) || [])\n  }\n\n  constructor(private entityService: EntityService, private eventService: EventsService, private fb: FormBuilder) {\n    \n    this.eventService.eventEvent$.subscribe(ev => {\n      if(ev instanceof Refresh) {\n        this.entity = this.entityService.getEntity()\n        this.setOpts()\n      }\n    })\n\n  }\n\n  apply() {\n    if(this.entity_) {\n      this.entity_.options.length = 0\n      this.optionsArray.controls.forEach(c => this.entity_?.options.push(new Option(c.value.name, c.value.value)))\n    }\n  }\n\n  ngOnInit(): void {\n  \n  }\n\n  add() {\n    this.optionsArray.push(\n      this.fb.group({\n        name: this.fb.control(''),\n        value: this.fb.control('')\n      })\n    )    \n  }\n\n  del(index: number) {\n    this.optionsArray.removeAt(index)\n  }\n\n}\n","<button (click)=\"add()\">Add</button>\n<button (click)=\"apply()\">Apply</button>\n<div *ngFor=\"let skill of optionsArray.controls; let index=index\">\n    <ng-container [formGroup]=\"skill\">\n      <p>\n        <span>&nbsp;</span>\n        <label for=\"n-{{index}}\">Name</label>\n        <span>&nbsp;</span>\n        <input id=\"n-{{index}}\" formControlName=\"name\" />\n        <span>&nbsp;</span>\n        <label for=\"v-{{index}}\">Value</label>\n        <span>&nbsp;</span>\n        <input id=\"v-{{index}}\" formControlName=\"value\" />\n        <span>&nbsp;</span>\n        <button (click)=\"del(index)\">Del</button>\n      </p>\n    </ng-container>\n  </div>\n\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { EventsService, Run } from 'src/app/services/events.service';\nimport { Command, SysutilService, RunOperator } from 'src/app/services/sysutil.service';\n\n\n@Component({\n  selector: 'app-commands',\n  templateUrl: './commands.component.html',\n  styleUrls: ['./commands.component.css']\n})\nexport class CommandsComponent implements OnInit {\n\n  commands: RunOperator[] = []\n  configCommands: Command[] = []\n  runit: string = \"\"\n  \n  constructor(private sysutilService: SysutilService, private eventService: EventsService) { \n    sysutilService.getConfigCommands().subscribe(c => this.configCommands = c)\n    this.eventService.eventEvent$.subscribe(ev => {\n      if(ev instanceof Run) {\n        this.runit = ev.sh\n      }\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  runIt(shcommand: string) {\n    this.sysutilService.runShCommand(shcommand).subscribe(value => {\n      this.commands = []\n      this.commands = this.sysutilService.commands;\n    })\n  }\n\n  addToConfig() {\n    let name = prompt(\"New command name:\")\n    if(name != null) {\n      let newCommand = new Command()\n      newCommand.name = name\n      newCommand.template = this.runit\n      this.configCommands.push(newCommand)\n      this.sysutilService.saveConfigCommands(this.configCommands)\n        .subscribe(v => this.sysutilService.getConfigCommands().subscribe(c => this.configCommands = c))\n    }\n  }\n\n  refreshlog(command: RunOperator) {\n    this.sysutilService.refreshLog(command).subscribe(value => {\n      command.log = value\n    })\n  }  \n\n}\n","<mat-accordion class=\"example-headers-align\">\n  <mat-expansion-panel>\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n          Sh command to run\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <p matLine>\n      <input type=\"text\" size=\"120\" [(ngModel)]=\"runit\" [matAutocomplete]=\"auto\">\n      <mat-autocomplete #auto=\"matAutocomplete\">\n        <mat-option *ngFor=\"let command of configCommands\" [value]=\"command.template\">\n          {{command.name + \": \" + command.template}}\n        </mat-option>\n      </mat-autocomplete>\n      <button mat-button color=\"basic\" matTooltip=\"Save this command\" (click)=\"addToConfig()\">\n        <mat-icon>add</mat-icon>\n      </button>      \n    </p>\n    <mat-action-row>\n      <button mat-button color=\"basic\" matTooltip=\"Run this command\" (click)=\"runIt(runit)\">\n          Run\n          <mat-icon>play_arrow</mat-icon>\n      </button>\n    </mat-action-row>\n  </mat-expansion-panel>  \n  <mat-expansion-panel *ngFor=\"let command of commands\">\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n          {{command.shCommand}}\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <p matLine>\n      {{command.runid}}\n    </p>\n    <p matLine>\n      <textarea cols=\"60\" rows=\"6\" disabled>{{command.log}}</textarea>        \n    </p>\n    <mat-action-row>\n      <button mat-button color=\"basic\" (click)=\"refreshlog(command)\">\n          Refresh\n          <mat-icon>autorenew</mat-icon>\n      </button>\n    </mat-action-row>\n  </mat-expansion-panel>\n<mat-accordion>\n","import { Step } from \"./step\";\r\n\r\nexport class Option {\r\n    name: string;\r\n    value: string;\r\n    constructor(name: string, value: string) {\r\n        this.name = name\r\n        this.value = value\r\n    }\r\n}\r\nexport class Entity {\r\n    name!: string;\r\n    steps: Step[] = []\r\n    options: Option[] = []\r\n}","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { Step } from '../classes/step';\r\n\r\ninterface Event {}\r\n\r\nexport class StepSelect implements Event {\r\n    step!: Step;\r\n    constructor(step: Step) {\r\n        this.step = step\r\n    }\r\n}\r\n\r\nexport class RedrawGraph implements Event {}\r\nexport class UnSelect implements Event {}\r\n\r\nexport class GraphSize implements Event {\r\n    h!: number;\r\n    w!: number;\r\n    constructor(h: number, w: number) {\r\n        this.h = h\r\n        this.w = w\r\n    }\r\n}\r\nexport class Refresh implements Event{}\r\nexport class RefreshProjects implements Event{}\r\nexport class File implements Event {\r\n    name: string;\r\n    constructor(name: string) {\r\n        this.name = name;\r\n    }\r\n}\r\nexport class UpdateFileList implements Event{}\r\nexport class CenterGraph implements Event{}\r\nexport class FitGraph implements Event{}\r\nexport class FileChanged implements Event{\r\n    name: string;\r\n    constructor(name: string) {\r\n        this.name = name;\r\n    }\r\n}\r\nexport class FileSaved implements Event{\r\n    name: string;\r\n    constructor(name: string) {\r\n        this.name = name;\r\n    }\r\n}\r\nexport class MainSave implements Event {}\r\nexport class Run implements Event {\r\n    sh: string;\r\n    constructor(sh: string) {\r\n        this.sh = sh\r\n    }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class EventsService {\r\n    constructor() { }\r\n    \r\n    private eventSource = new Subject<Event>();\r\n    eventEvent$ = this.eventSource.asObservable();\r\n    emitEventEvent(data: Event) {\r\n      this.eventSource.next(data);\r\n    }\r\n}","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Step } from 'src/app/classes/step';\nimport { EntityService } from 'src/app/services/entity.service';\nimport { EventsService, RedrawGraph, Refresh, StepSelect, UnSelect } from 'src/app/services/events.service';\n\n@Component({\n  selector: 'app-step-list',\n  templateUrl: './step-list.component.html',\n  styleUrls: ['./step-list.component.styl']\n})\nexport class StepListComponent implements OnInit {\n  @ViewChild('listSteps') listSteps: any = undefined;\n  \n  steps: Step[] = []\n  selected: Step | undefined\n  constructor(private eventService: EventsService, private entityService: EntityService) {\n    this.refresh()\n    this.eventService.eventEvent$.subscribe(ev => {if (ev instanceof StepSelect) {this.selected = ev.step}})\n    this.eventService.eventEvent$.subscribe(ev => {if (ev instanceof Refresh) this.refresh()})\n  }\n\n  refresh() {\n    this.steps = this.entityService.getEntity().steps;\n    this.selected = undefined;\n  }\n\n  createOps() {\n\n  }\n\n  a() {\n    alert(this.listSteps.selectedOptions.selected[0]?.value)\n  }\n\n  ngOnInit(): void {\n  }  \n\n  add() {\n    if(this.steps.filter(s => s.name === undefined).length == 0) {\n      this.steps.push(new Step(this.entityService.getStepUniqName()))\n      this.eventService.emitEventEvent(new RedrawGraph())\n    }\n  }\n\n  rm() {\n    if(this.selected) {\n      let idx = this.steps.indexOf(this.selected)\n      if(idx >= 0) {\n        this.steps.splice(idx, 1)\n        this.steps.forEach(s => {\n          if(this.selected) {\n            let i = s.in.indexOf(this.selected)\n            if(i >= 0) {\n              s.in.splice(i, 1)\n            }\n          }\n        })\n        this.selected = undefined\n        this.eventService.emitEventEvent(new UnSelect())\n        this.eventService.emitEventEvent(new RedrawGraph())\n      }\n    }\n  }\n\n  onSelection(e: any, v: any) {\n    let selected = e.option.selected\n    let step: Step | undefined = e.option.value\n    if(selected && step) {\n      this.eventService.emitEventEvent(new StepSelect(step))\n    }\n  }\n\n}\n","<mat-toolbar>\n  <button mat-icon-button (click)=\"add()\">\n    <mat-icon>add</mat-icon>\n  </button>\n  <button mat-icon-button (click)=\"rm()\">\n    <mat-icon>remove</mat-icon>\n  </button>\n</mat-toolbar>\n<mat-selection-list #listSteps [multiple]=\"false\" (selectionChange)=\"onSelection($event, listSteps.selectedOptions)\">\n  <mat-list-option *ngFor=\"let step of steps\" [selected]=\"step === selected\" [value]=\"step\">\n    {{step.name}}\n  </mat-list-option>\n</mat-selection-list>","import { NgModule } from '@angular/core';             \nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { HomeComponent } from './components/home/home.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent, canActivate: [AuthGuard] },\n  { path: 'login', component: LoginComponent },\n//  { path: 'first-component', component: FirstComponent },\n//  { path: 'second-component', component: SecondComponent },\n  { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { Step } from 'src/app/classes/step';\nimport { EntityService } from 'src/app/services/entity.service';\nimport { EventsService, RedrawGraph, Refresh, StepSelect, UnSelect } from 'src/app/services/events.service';\n\n@Component({\n  selector: 'app-step-props',\n  templateUrl: './step-props.component.html',\n  styleUrls: ['./step-props.component.styl']\n})\nexport class StepPropsComponent implements OnInit, OnChanges {\n  step: Step | undefined = undefined;\n  steps: Step[];\n \n  selectedStep: Step | undefined;\n\n  constructor(private eventService: EventsService, private entityServis: EntityService) { \n    this.eventService.eventEvent$.subscribe(ev => {\n      if(ev instanceof StepSelect) {\n        this.step = ev.step\n      }\n      if(ev instanceof UnSelect) {\n        this.step = undefined\n      }\n      if(ev instanceof Refresh) {\n        this.step = undefined\n        this.steps = this.entityServis.getEntity().steps;    \n      }\n    })\n    this.steps = this.entityServis.getEntity().steps;\n  }\n\n  addIn(step: Step) {\n    if(this.step) {\n      this.step.in.push(step)\n      this.eventService.emitEventEvent(new RedrawGraph())\n    }\n  }\n\n  rmIn(step: Step | undefined) {\n    if(this.step && step) {\n      let idx = this.step.in.indexOf(step)\n      if(idx >= 0) {\n        this.step.in.splice(idx, 1)\n        this.eventService.emitEventEvent(new RedrawGraph())\n      }\n    }\n  }\n\n  filtered(): Step[] {\n    return this.steps.filter(s => !(s === this.step || this.step?.in.includes(s)))\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // changes.prop contains the old and the new value...\n    console.log(changes)\n  }\n\n}\n","<ng-container *ngIf=\"step\">\n  <div fxLayout=\"row\" style=\"height: 100%;overflow-y: auto;margin-left: 5px;\" fxLayoutGap=\"5px\">\n    <div fxFlex=\"30\" fxLayoutGap=\"5px\">\n      <h2>Props</h2>\n      <label>Name</label>\n      <input name=\"stepName\" [(ngModel)]=\"step.name\">\n      <br>\n      in\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n        <mat-icon>add</mat-icon>\n      </button>\n      <mat-menu #menu=\"matMenu\">\n        <button mat-menu-item *ngFor=\"let s of filtered()\" (click)=\"addIn(s)\">\n          <mat-icon>dialpad</mat-icon>\n          <span>{{s.name}}</span>\n        </button>\n      </mat-menu>\n\n      <button mat-icon-button (click)=\"rmIn(selectedStep)\">\n        <mat-icon>remove</mat-icon>\n      </button>\n      <select size=\"10\" style=\"width: 100%;\" [(ngModel)]=\"selectedStep\">\n        <option *ngFor=\"let i of step.in\" [ngValue]=\"i\">{{i.name}}</option>\n      </select>\n    </div>\n    <div fxFlex>\n      <app-step-opts [step]=\"step\"></app-step-opts>\n    </div>\n  </div>\n</ng-container>","export class Options {\r\n    name!: string;\r\n    opts?: {option: string, value: any}[]\r\n}\r\n\r\nexport class Step { \r\n    name!: string;\r\n    in: Step[] = [];\r\n    opt: Options = new Options();\r\n    constructor(name: string) {\r\n        this.name = name\r\n    }\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}